/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */

import {test_util} from '@tensorflow/tfjs-core';
import {loadQnA, UniversalSentenceEncoderQnA} from './use_qna';

describe('Universal Sentence Encoder QNA', () => {
  let qna: UniversalSentenceEncoderQnA;
  beforeAll(async () => {
    qna = await loadQnA();
  });

  it('basic usage', async () => {
    const result = await qna.embed({
      queries: ['what is the weather today?'],
      responses: [{response: 'today is cloudy.'}]
    });
    test_util.expectArraysClose(result['queryEmbedding'][0], [
      2.7645488,   0.30286145,  0.15519771,  3.3303149,   0.73709464,
      -0.24267645, 0.42912522,  0.6104698,   1.402183,    -2.319392,
      0.1386897,   0.20799994,  3.1938918,   0.48018247,  -0.2336823,
      3.1762602,   -0.15730904, 0.620998,    -0.3168982,  0.01887584,
      -0.03040927, 0.06796362,  0.39682847,  -0.8980976,  -0.23845802,
      0.15611805,  0.2725699,   -1.8144639,  0.5021897,   -0.13243707,
      -0.16235027, -0.8155376,  0.03923966,  0.12180302,  -0.7676933,
      3.2731714,   0.16963466,  0.33868262,  -0.20740426, -0.6665582,
      0.04915003,  -0.04177394, 0.37417072,  0.26179722,  0.82453203,
      0.13558507,  -0.02828247, 0.10979467,  0.4984138,   0.1251011,
      -0.40570533, 0.35685825,  0.4352448,   3.1945264,   0.19645983,
      -0.08614383, 0.6918269,   -0.04146867, 0.00547367,  0.31328753,
      -0.00504928, -0.9106121,  -0.09238561, 0.00692027,  0.3602638,
      -0.55486757, 0.58284456,  0.07299471,  0.24222873,  -1.7512876,
      -2.7701135,  0.16699581,  0.12134986,  0.4786817,   0.07161791,
      0.6970726,   -0.15573968, -0.8637686,  -0.8269252,  2.7347164,
      -0.28828332, 0.4646879,   -0.23542976, 0.1885213,   -0.07906074,
      -0.4910207,  0.08913047,  -0.09251469, -1.2985612,  -1.2836055,
      -0.13542742, 3.1167097,   -0.1678529,  -0.21905473, -1.3630934,
      0.2087331,   0.01345341,  0.34093782,  -0.02854175, 3.029753
    ]);
    test_util.expectArraysClose(result['responseEmbedding'][0], [
      -2.7903643,  -0.7020997,  -0.5393383,  0.7589595,   1.8675963,
      0.13674915,  -0.80103,    -0.34954107, 1.6652802,   1.7186067,
      -0.80345714, -0.18878363, -0.320481,   1.3214048,   0.9120344,
      1.707129,    -1.3292489,  -0.2988205,  0.19789799,  -1.4207102,
      1.1632164,   1.0613979,   -0.50598425, -0.743629,   0.45145196,
      -1.3591434,  -1.4505718,  0.12148909,  0.43211582,  -0.97200686,
      1.0016091,   -0.5041195,  1.1606078,   -0.07992788, -0.60910803,
      -0.07444222, -0.04325415, 0.8746788,   -1.3428974,  -0.9737125,
      1.4358486,   -0.67734474, 2.0742533,   0.6386704,   0.9713414,
      1.4017808,   -1.2397543,  1.6230887,   -0.36473927, -0.40323737,
      -0.9649109,  1.1477537,   1.349556,    1.073676,    1.2211813,
      -0.7674891,  1.7596902,   -0.67888576, -0.6901066,  1.1336823,
      1.0909919,   -0.03635395, -0.9884136,  -1.5454148,  -0.20521395,
      -1.0088263,  0.15151767,  -0.83107924, 1.7557824,   0.34723148,
      0.78867906,  0.9948809,   -0.9609835,  1.526174,    0.93398654,
      0.957069,    -1.3943961,  -1.0564212,  0.01647631,  2.260069,
      -1.8463705,  2.1627388,   -0.15955001, -1.8080655,  -0.63866234,
      0.21116942,  0.5413755,   0.63926923,  0.29422516,  -1.2522588,
      0.11680362,  0.09367324,  -1.5876546,  -1.6012754,  -0.26643804,
      0.608659,    2.2008464,   1.0552162,   -1.4435272,  -1.2838663
    ]);
  });
});
